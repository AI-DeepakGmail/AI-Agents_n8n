{
  "name": "Agent Router",
  "nodes": [
    {
      "parameters": {
        "path": "/agent-router",
        "responseMode": "lastNode",
        "options": {
          "rawBody": true
        }
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        48,
        32
      ],
      "id": "70d44ff2-7050-4db1-9e14-4551a9dcd2c1",
      "name": "Webhook",
      "webhookId": "b4b8c644-5319-47b7-8610-62588a160b64"
    },
    {
      "parameters": {
        "jsCode": "const input = $input.first().json.body.text;\nif (input.includes(\"schedule\") || input.includes(\"meeting\") || input.includes(\"calendar\")) {\n  return [{ json: { agent: \"calendar\", text: input } }];\n} else if (input.includes(\"remind me\") || input.includes(\"task\") || input.includes(\"every\")) {\n  return [{ json: { agent: \"task\", text: input } }];\n} else {\n  return [{ json: { agent: \"query\", text: input } }];\n}\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        240,
        80
      ],
      "id": "1e04ab7d-3011-4e7c-813b-b476d4ad86ad",
      "name": "Code"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.agent }}",
                    "rightValue": "calendar",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    },
                    "id": "51a37aa1-177c-4839-a4d4-326d7ede14ab"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "dd7d99c8-53ea-48d0-84a4-cdd7e9e7476c",
                    "leftValue": "={{ $json.agent }}",
                    "rightValue": "task",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "859b94e9-d982-47ad-89b4-e8279c3e78eb",
                    "leftValue": "={{ $json.agent }}",
                    "rightValue": "query",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        448,
        80
      ],
      "id": "16d78cd4-0cbd-406e-adbb-3652c6dfca32",
      "name": "Switch"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://127.0.0.1:2703/calendar-command",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"text\": \"{{$json.text}}\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        656,
        -32
      ],
      "id": "1ddc60de-7480-49b5-a956-66d12fafb471",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=http://127.0.0.1:2702/add-task",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"name\": \"auto-task\",\n  \"message\": \"{{$json.text}}\",\n  \"interval\": \"30min\",\n  \"repeat\": true\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        656,
        80
      ],
      "id": "089f0e5f-f7f2-44d7-ae32-20aeece938a2",
      "name": "HTTP Request1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://127.0.0.1:2701/ask",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"question\": \"{{$json.text}}\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        656,
        192
      ],
      "id": "0addea7b-da9b-4cc6-8f36-a8985e1c9e74",
      "name": "HTTP Request2"
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "484a1f7d-ff3c-47b5-b447-297402711c1d",
  "meta": {
    "instanceId": "73a6e845ecf5f4e9b95832df0d2e5f7da0a90c38dce97abfd4f0cae9f8c6c5f4"
  },
  "id": "0nkpADLAV65HiMi5",
  "tags": []
}